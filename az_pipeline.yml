---
trigger: none

pr:
  - develop

variables:
  imageNameBacktend: 'mrjadhav/full_stack_backend'
  imageNameFrontend: 'mrjadhav/full_stack_frontend'     # This is repos name
  tag: '$(Build.BuildId)'

stages:
  - stage: Build
    displayName: Build and push image
    pool:
      vmImage: ubuntu-latest
    jobs:
      - job: BuildImagesForBackend
        displayName: Build images for backend
        steps:
          - task: Docker@2
            displayName: 'Build docker image and push to repository'
            inputs:
              command: buildAndPush
              Dockerfile: './backend/Dockerfile'
              containerRegistry: 'DockerHub'
              repository: 'mrjadhav/full_stack_backend'
              tags: '$(Build.BuildId)'

      - job: BuildImagesForFrontend
        displayName: Build images for frontend
        steps:
          - task: Docker@2
            displayName: 'Build docker image and push to repository'
            inputs:
              command: buildAndPush
              Dockerfile: './frontend/Dockerfile'
              containerRegistry: 'DockerHub'
              repository: 'mrjadhav/full_stack_frontend'
              tags: '$(Build.BuildId)'
   
  - stage: DockerImageScan
    displayName: Scannig the docker images
    pool:
      vmImage: ubuntu-latest
    dependsOn: Build
    jobs:
      - job: BackendScan
        displayName: BackendImageScan
        steps:
          - task: CmdLine@2
            displayName: 'Install Trivy'
            inputs:
              script: |
                sudo apt-get update
                sudo apt-get install -y wget
                wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.40.0_Linux-64bit.deb
                sudo dpkg -i trivy_0.40.0_Linux-64bit.deb
          - task: CmdLine@2
            displayName: 'Run Trivy Scan for frontend'
            inputs:
              script: |
                trivy image --format template --template "@contrib/junit.tpl" -o trivy-results.xml $(imageNameFrontend):$(tag)
          - task: CmdLine@2
            displayName: 'Run Trivy Scan for backend'
            inputs:
              script: |
                trivy image --format template --template "@contrib/junit.tpl" -o trivy-results.xml $(imageNameBacktend):$(tag)
          - task: PublishTestResults@2
            displayName: 'Publish Trivy Scan Results'
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/trivy-results.xml'
              mergeTestResults: true
              failTaskOnFailedTests: true
              testRunTitle: 'Trivy - Vulnerabilities Summary'




#  - stage: TestStage
#    displayName: Running Tests
#    pool:
#      vmImage: windows-latest
##    dependsOn: []
#    jobs:    
#      - job: RunningApplication
#        displayName: Running Application
#        steps:
#          - powershell: |  
#              # Install Docker Desktop
#              choco install docker-desktop -y
#            displayName: Installing DockerDesktop
#          
#          - powershell: |
#              # Start Docker Desktop
#              Start-Process "C:\Program Files\Docker\Docker\Docker Desktop.exe" -WindowStyle Minimized
#            displayName: Starting the DockerDesktop
#
#          - powershell: |
#              # Run Docker Compose
#              docker compose up -d
#            displayName: Running docker compose file